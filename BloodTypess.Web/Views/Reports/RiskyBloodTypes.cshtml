@model List<BloodTypess.Core.DTOs.ReportDtos.RiskBloodTypeDto>
@{
    ViewData["Title"] = "Risky Blood Types";
}

<div class="container">
    <h1 class="mb-4">Blood Supply Risk Assessment</h1>

    <div class="row">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header">
                    Supply Risk Analysis
                </div>
                <div class="card-body">
                    <div style="height: 400px;">
                        <canvas id="riskChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card">
                <div class="card-header">
                    Risk Categories
                </div>
                <div class="card-body">
                    <div class="alert alert-danger">
                        <h5>High Risk (0-5 units)</h5>
                        <p>Critically low supply, immediate donation needed</p>
                    </div>
                    <div class="alert alert-warning">
                        <h5>Medium Risk (6-15 units)</h5>
                        <p>Low supply, donations recommended</p>
                    </div>
                    <div class="alert alert-success">
                        <h5>Low Risk (>15 units)</h5>
                        <p>Adequate supply available</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    Blood Type Risk Details
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>Blood Type</th>
                                    <th>Available Units</th>
                                    <th>Eligible Donors</th>
                                    <th>Risk Level</th>
                                    <th>Donor-to-Unit Ratio</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var blood in Model.OrderBy(b => b.AvailableUnits))
                                {
                                    string riskClass = blood.AvailableUnits < 5 ? "table-danger" :
                                    (blood.AvailableUnits < 15 ? "table-warning" : "table-success");
                                    string riskLevel = blood.AvailableUnits < 5 ? "High" :
                                    (blood.AvailableUnits < 15 ? "Medium" : "Low");
                                    decimal ratio = blood.AvailableUnits > 0 ? (decimal)blood.EligibleDonors / blood.AvailableUnits : 0;
                                    <tr class="@riskClass">
                                        <td><span class="fw-bold">@blood.BloodType</span></td>
                                        <td>@blood.AvailableUnits</td>
                                        <td>@blood.EligibleDonors</td>
                                        <td>@riskLevel</td>
                                        <td>@ratio.ToString("0.##"):1</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    Critical Supply Recommendations
                </div>
                <div class="card-body">
                    @{
                        var criticalTypes = Model.Where(b => b.AvailableUnits < 5).OrderBy(b => b.AvailableUnits).ToList();
                    }

                    @if (criticalTypes.Any())
                    {
                        <div class="alert alert-danger">
                            <h5>Critical Blood Types Needing Immediate Attention</h5>
                            <ul>
                                @foreach (var critical in criticalTypes)
                                {
                                    <li>
                                        <strong>@critical.BloodType</strong>: Only @critical.AvailableUnits units available
                                        with @critical.EligibleDonors eligible donors
                                    </li>
                                }
                            </ul>
                            <p>Recommended Actions:</p>
                            <ol>
                                <li>Contact eligible donors for these blood types</li>
                                <li>Organize targeted donation drives</li>
                                <li>Consider emergency supply requests from partner facilities</li>
                            </ol>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-success">
                            <h5>No Critical Blood Types</h5>
                            <p>All blood types currently have adequate supply (more than 5 units).</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Colors for risk levels
        const riskColors = [
            '#dc3545', // High risk - red
            '#ffc107', // Medium risk - yellow
            '#28a745'  // Low risk - green
        ];

        // Calculate risk data
        const bloodTypes = [@Html.Raw(string.Join(",", Model.Select(b => $"'{b.BloodType}'")))];
        const availableUnits = [@string.Join(",", Model.Select(b => b.AvailableUnits))];
        const eligibleDonors = [@string.Join(",", Model.Select(b => b.EligibleDonors))];

        const backgroundColors = availableUnits.map(units =>
            units < 5 ? riskColors[0] :
            (units < 15 ? riskColors[1] : riskColors[2])
        );

        // Risk Chart
        const riskData = {
            labels: bloodTypes,
            datasets: [
                {
                    label: 'Available Units',
                    data: availableUnits,
                    backgroundColor: backgroundColors,
                    borderWidth: 1
                },
                {
                    label: 'Eligible Donors',
                    data: eligibleDonors,
                    type: 'line',
                    borderColor: '#6610f2',
                    pointBackgroundColor: '#6610f2',
                    borderWidth: 2,
                    fill: false
                }
            ]
        };

        const riskChart = new Chart(
            document.getElementById('riskChart'),
            {
                type: 'bar',
                data: riskData,
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top'
                        },
                        title: {
                            display: true,
                            text: 'Blood Supply Risk Analysis'
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            }
        );
    </script>
}